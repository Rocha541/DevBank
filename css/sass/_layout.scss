
// Layout of project

// Container-devices
$container-xl: 1440px;
$container-l: 1268px;
$container-m: 960px;
$container-s: 620px;
$container-xs: 340px;
$gutter: 32px;

// Mixin of media-queries
@mixin responsive($device) {

  @if $device == xl {
    // For resolutions upper 1440px
    @media screen and (min-width: $container-xl) {
      @content;
    }
  } 

  @else if $device == ul {
    // For resolutions upper 960px
    @media screen and (min-width: $container-m) {
      @content;
    }
  } 
  
  @else if $device == l {
    // For resolutions between 1140px and 1440px
    @media screen and (max-width: $container-xl) and (min-width: $container-l) {
      @content;
    }
  } 
  
  
  @else if $device == m {
    // For resolutions between 960px and 1140px
    @media screen and (max-width: $container-l) and (min-width: $container-s) {
      @content;
    }
  } 
  
  
  @else if $device == s {
    // For resolutions less than 960px
    @media screen and (max-width: $container-m) {
      @content;
    }
  } 
  
  
  @else if $device == xs {
    // For resolutions less than 340px
    @media screen and (max-width: $container-xs) {
      @content;
    }
  }
}


@function grid($col, $total: 12){
  @return calc($col / $total) * 100%;
}


@for $i from 1 through 12{
  .grid-#{$i}{
      width: calc(#{grid($i)} - #{$gutter});
      margin: calc($gutter / 2);

      padding: 16px 0px;
      float: left;

      @include responsive(s){
          width: calc(100% - #{$gutter});
          float: none;
      }
  }
}

@for $i from 1 through 12{
  .grid-nobreak-#{$i}{
      width: calc(#{grid($i)} - #{$gutter});
      margin: calc($gutter / 2);

      padding: 16px 0px;
      float: left;
  }
}

.container {
  max-width: $container-l;
  margin: 0 auto;

  padding: 128px 24px;

  /*display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;*/
  //overflow: hidden;
  //position: sticky;

  // clearfix
  &::after{
    content: '';
    display: table;
    clear: both;
  }

  @include responsive(s) {
    flex-direction: column;

    padding: 96px 16px;
  }
}


.disappear{
  @include responsive(s){
    display: none;
  }
}

.hidden{
  overflow: hidden;
}

.zindex-1{
  z-index: -1;
}

.row{
  // clearfix
  &::after{
    content: '';
    display: table;
    clear: both;
  }
}

.h-100{
  height: 100vh;
}

.h-100p{
  height: 100%;
}

.flex {
  display: flex;
}

.flex-start-row {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  flex-direction: row;

}
.flex-end-row {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-direction: row;

}
.flex-start-column {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-direction: column;
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-center-column {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}


.flex-space {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;

  @include responsive(s){
    //flex-direction: column;
    //align-items: flex-start;
  }
}

.flex-column {
  flex-direction: column;
}

.float-left{
  float: left;
}


.relative {
  position: relative;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-item-1 {
  flex: 1 1 360px;
}

.flex-item-2 {
  flex: 2 1 360px;
}

.flex-item-3 {
  flex: 3 1 360px;
}

.flex-item-4 {
  flex: 4 1 360px;
}

.flex-item-5 {
  flex: 5 1 360px;
}

.flex-auto {
  flex: 1 1 auto;
}

// Width's
.w-auto {
  width: auto;
}
.h-auto {
  height: auto !important;
}
.w-100 {
  width: 100%;
}
.w-75 {
  width: 75%;
}
.w-50 {
  width: 50%;
}
.w-25 {
  width: 25%;
}
.h-card{
height: 470px;
width: 350px;
}




.espiral{
  width: 100%;
  min-height: 420px;

  //min-height: 800px;
  transform: scale(1);

  @include responsive(s){
    width: 140%;
    height: 100%;
    min-height: 400px;

    //min-height: 680px;

    transform: scale(0.8) translate(-18%, -0%);
    z-index: -1;
  }
}



.perspective{
  perspective: 600;
}


.container-cta-footer{
  border: 1px solid red;

  position: relative;
  padding: 120px 0px;

  &::after{
    position: absolute;

    top: 0;
    left: 50%;

    width: 200px;
    height: 200px;

    background-color: red;

    transform: skewX(-10deg);

    z-index: -1;
  }
}



